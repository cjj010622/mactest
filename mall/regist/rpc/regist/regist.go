// Code generated by goctl. DO NOT EDIT!
// Source: regist.proto

package regist

import (
	"context"

	"zero-study/mall/regist/rpc/types/regist"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IdRequest    = regist.IdRequest
	RegistRepose = regist.RegistRepose

	Regist interface {
		GetRegist(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*RegistRepose, error)
	}

	defaultRegist struct {
		cli zrpc.Client
	}
)

func NewRegist(cli zrpc.Client) Regist {
	return &defaultRegist{
		cli: cli,
	}
}

func (m *defaultRegist) GetRegist(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*RegistRepose, error) {
	client := regist.NewRegistClient(m.cli.Conn())
	return client.GetRegist(ctx, in, opts...)
}
